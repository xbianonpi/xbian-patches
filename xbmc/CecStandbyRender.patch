--- a/xbmc/Application.h	2014-05-20 03:40:12.591108464 +0200
+++ b/xbmc/Application.h	2014-05-19 18:21:49.100492750 +0200
@@ -208,6 +208,7 @@
   void ResetSystemIdleTimer();
   void ResetScreenSaverTimer();
   void StopScreenSaverTimer();
+  void SetCecStandby(bool status);
   // Wakes up from the screensaver and / or DPMS. Returns true if woken up.
   bool WakeUpScreenSaverAndDPMS(bool bPowerOffKeyPressed = false);
   bool WakeUpScreenSaver(bool bPowerOffKeyPressed = false);
@@ -402,6 +403,9 @@
   bool m_dpmsIsActive;
   bool m_dpmsIsManual;
 
+  bool m_cecIsStandby;
+  uint32_t m_cecCounter;
+
   CFileItemPtr m_itemCurrentFile;
   CFileItemList* m_currentStack;
   CFileItemPtr m_stackFileItemToUpdate;
--- a/xbmc/Application.cpp	2014-05-20 03:40:12.609107634 +0200
+++ b/xbmc/Application.cpp	2014-05-19 19:46:02.641525016 +0200
@@ -405,6 +405,7 @@
   m_skinReloading = false;
   m_skinReverting = false;
   m_loggingIn = false;
+  m_cecIsStandby = false;
 
 #ifdef HAS_GLX
   XInitThreads();
@@ -469,6 +470,7 @@
   {
     case XBMC_QUIT:
       if (!g_application.m_bStop)
+        g_application.SetCecStandby(false);
         CApplicationMessenger::Get().Quit();
       break;
     case XBMC_KEYDOWN:
@@ -2195,12 +2197,27 @@
   return 100.0f;
 }
 
+void CApplication::SetCecStandby(bool status)
+{
+  CLog::Log(LOGDEBUG, "setting cecIsStandby to %s", status?"true":"false");
+  m_cecIsStandby = status;
+#ifdef HAS_IMXFB
+  g_Windowing.SetVSync(true);
+#endif
+}
+
 void CApplication::Render()
 {
   // do not render if we are stopped or in background
   if (m_bStop || m_bInBackground)
     return;
 
+  if (m_cecIsStandby && (m_cecCounter++ % 10))
+  {
+    Sleep(200);
+    return;
+  }
+
   MEASURE_FUNCTION;
 
   int vsync_mode = CSettings::Get().GetInt("videoscreen.vsync");
--- a/xbmc/peripherals/devices/PeripheralCecAdapter.cpp	2014-05-20 03:40:12.623106987 +0200
+++ b/xbmc/peripherals/devices/PeripheralCecAdapter.cpp	2014-05-20 03:51:44.716643411 +0200
@@ -631,6 +631,12 @@
         else if (adapter->m_configuration.bShutdownOnStandby == 1)
           CApplicationMessenger::Get().Shutdown();
       }
+      if (command.initiator == CECDEVICE_TV)
+        g_application.SetCecStandby(true);
+      break;
+    case CEC_OPCODE_MENU_REQUEST:
+      if (command.initiator == CECDEVICE_TV)
+        adapter->CecSourceActivated(cbParam, (CEC::cec_logical_address)0xf, 1);
       break;
     case CEC_OPCODE_SET_MENU_LANGUAGE:
       if (adapter->m_configuration.bUseTVMenuLanguage == 1 && command.initiator == CECDEVICE_TV && command.parameters.size == 3)
@@ -1128,7 +1134,12 @@
 
   // wake up the screensaver, so the user doesn't switch to a black screen
   if (activated == 1)
+  {
     g_application.WakeUpScreenSaverAndDPMS();
+    g_application.SetCecStandby(false);
+  }
+  else
+    g_application.SetCecStandby(true);
 
   if (adapter->GetSettingBool("pause_playback_on_deactivate"))
   {
